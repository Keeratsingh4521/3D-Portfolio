import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import scene from '../assets/3d/fox.glb'

const Fox = ({ currentAnimation, ...props }) => {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF(scene)
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    if (currentAnimation && actions[currentAnimation]) {
      const action = actions[currentAnimation]
      action.reset().fadeIn(0.5).play()
      return () => action.fadeOut(0.5)
    }
  }, [actions, currentAnimation])

  return (
    <group ref={group} {...props} dispose={null} scale={[0.6, 0.6, 0.6]}>
      <group name="Sketchfab_Scene">
        <primitive object={nodes.GLTF_created_0_rootJoint} />
        <skinnedMesh
          name="Object_7"
          geometry={nodes.Object_7.geometry}
          material={materials.PaletteMaterial001}
          skeleton={nodes.Object_7.skeleton}
        />
        <skinnedMesh
          name="Object_8"
          geometry={nodes.Object_8.geometry}
          material={materials.PaletteMaterial001}
          skeleton={nodes.Object_8.skeleton}
        />
        <skinnedMesh
          name="Object_9"
          geometry={nodes.Object_9.geometry}
          material={materials.PaletteMaterial001}
          skeleton={nodes.Object_9.skeleton}
        />
        <skinnedMesh
          name="Object_10"
          geometry={nodes.Object_10.geometry}
          material={materials.PaletteMaterial001}
          skeleton={nodes.Object_10.skeleton}
        />
        <skinnedMesh
          name="Object_11"
          geometry={nodes.Object_11.geometry}
          material={materials.PaletteMaterial001}
          skeleton={nodes.Object_11.skeleton}
        />
      </group>
    </group>
  )
}

export default Fox






// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Author: simonemaccari (https://sketchfab.com/simonemaccari)
// License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
// Source: https://sketchfab.com/3d-models/demon-gladiator-19d26ace220a45448f058ae77dcd6c8b
// Title: Demon Gladiator
// */

// import React, { useRef } from 'react'
// import { useGLTF, useAnimations } from '@react-three/drei'

// export function Model(props) {
//   const group = useRef()
//   const { nodes, materials, animations } = useGLTF('/demon_gladiator.glb')
//   const { actions } = useAnimations(animations, group)
//   return (
//     <group ref={group} {...props} dispose={null}>
//       <group name="Sketchfab_Scene">
//         <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]} scale={21.067}>
//           <group name="fbx_mergefbx" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
//             <group name="Object_2">
//               <group name="RootNode">
//                 <group name="Object_4">
//                   <primitive object={nodes._rootJoint} />
//                   <skinnedMesh
//                     name="Object_7"
//                     geometry={nodes.Object_7.geometry}
//                     material={materials.test_female1_2_Pbr}
//                     skeleton={nodes.Object_7.skeleton}
//                   />
//                   <group name="Object_6" rotation={[-Math.PI / 2, 0, 0]} />
//                   <group name="test___female1_2" rotation={[-Math.PI / 2, 0, 0]} />
//                 </group>
//               </group>
//             </group>
//           </group>
//         </group>
//       </group>
//     </group>
//   )
// }

// useGLTF.preload('/demon_gladiator.glb')




// import React, { useEffect, useRef } from 'react';
// import { useGLTF, useAnimations } from '@react-three/drei';
// import scene from '../assets/3d/demon.glb';

// const Demon = ({ currentAnimation, ...props }) => {
//   const group = useRef();
//   const { nodes, materials, animations } = useGLTF(scene);
//   const { actions, names } = useAnimations(animations, group);

//   useEffect(() => {
//     console.log('Available animations:', names); // Debugging line to check animation names
//     if (currentAnimation && actions[currentAnimation]) {
//       const action = actions[currentAnimation];
//       action.reset().fadeIn(0.5).play();
//       return () => action.fadeOut(0.5);
//     }
//   }, [actions, currentAnimation]);

//   return (
//     <group ref={group} {...props} dispose={null} scale={[1, 1, 1]}>
//       <group name="Sketchfab_Scene">
//         <group name="Sketchfab_model" rotation={[-Math.PI / 2.5, 0.1, 0]} scale={21.067}>
//           <group name="fbx_mergefbx" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
//             <group name="Object_2">
//               <group name="RootNode">
//                 <group name="Object_4">
//                   <primitive object={nodes._rootJoint} />
//                   <skinnedMesh
//                     name="Object_7"
//                     geometry={nodes.Object_7.geometry}
//                     material={materials.test_female1_2_Pbr}
//                     skeleton={nodes.Object_7.skeleton}
//                   />
//                   <group name="Object_6" rotation={[-Math.PI / 2, 0, 0]} />
//                   <group name="test___female1_2" rotation={[-Math.PI / 2, 0, 0]} />
//                 </group>
//               </group>
//             </group>
//           </group>
//         </group>
//       </group>
//     </group>
//   );
// };

// export default Fox;
